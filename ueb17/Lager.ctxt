#BlueJ class context
comment0.target=Lager
comment0.text=\r\n\ \ \ \ Die\ Klasse\:\ \ Lager.java\r\n\ \ \ \ Realisiert\ eine\ allgemeine\ Lager-Klasse\ fuer\r\n\ \ \ \ Artikel.\r\n\r\n\ @version\t2.61\ Beta\ 13.01.2017\r\n\ @author\tWolfgang\ Pauly\r\n\r\n
comment1.params=
comment1.target=Lager()
comment1.text=\r\n\ \ \ \ Der\ Konstruktor\ zur\ Standard-Initialisierung\ \r\n\ \ \ \ des\ Lagers\r\n\ \ \ \ \ \ \ \ \r\n
comment10.params=artikelNummer\ zugang
comment10.target=void\ bucheZugang(int,\ int)
comment10.text=\r\n\ \ \ \ bucht\ einen\ Zugang\ von\ Artikeln\ zu\ dem\ durch\ die\ Artikel-Nummer\ \r\n\ \ \ \ identifizierten\ Artikel.\r\n\ \ \ \ \r\n\ \ \ \ @param\ \ \ artikelNummer\ Artikel-Nummer,\ des\ zu\ buchenden\ Artikels\r\n\ \ \ \ @param\ zugang\ hinzukommende\ Artikel-Anzahl\r\n
comment11.params=artikelNummer\ abgang
comment11.target=void\ bucheAbgang(int,\ int)
comment11.text=\r\n\ \ \ \ bucht\ einen\ Abgang\ von\ Artikeln\ von\ dem\ durch\ die\ Artikel-Nummer\ \r\n\ \ \ \ identifizierten\ Artikel.\r\n\ \ \ \ \r\n\ \ \ \ @param\ \ \ artikelNummer\ Artikel-Nummer,\ des\ zu\ buchenden\ Artikels\r\n\ \ \ \ @param\ abgang\ weggehende\ Artikel-Anzahl\r\n
comment12.params=prozent
comment12.target=void\ preisaenderung(double)
comment12.text=\r\n\ \ \ \ preisaenderung\ -\ erhoeht,\ vermindert\ die\ Preise\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ aller\ Lagerartikel\r\n\r\n\ \ \ \ @param\ \ prozent\ -\ positive\ Prozentzahl\ \=\=\ Preiserhoehung,\ negative\ \=\ Preisverminderung\ \r\n
comment13.params=suchArtikelNr
comment13.target=int\ sucheArtikel(int)
comment13.text=\r\n\ \ \ \ sucheArtikel\ -\ sucht\ im\ Lager\ Array\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ nach\ dem\ Vorkommen\ eines\ Artikels\ anhand\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ der\ Artikel-Nummer\r\n\r\n\ \ \ \ @param\ suchArtikelNr\ -\ die\ zu\ suchende\ Artikelnummer\r\n\ \ \ \ @return\ Index\ des\ gefundenen\ Artikels\ oder\ -1,\ falls\ der\ Artikel\ nicht\r\n\ \ \ \ \ \ \ \ \ \ \ \ im\ Lager\ enthalten\ ist.\r\n
comment14.params=
comment14.target=java.lang.String\ ausgebenBestandsListe()
comment14.text=\r\n\ \ \ \ erzeugt\ einen\ String,\ der\ eine\ Bestandsliste\ repraesentiert\r\n\r\n\ \ \ \ @return\ die\ String-Repraesentation\ der\ Lager-Bestandsliste\r\n
comment15.params=
comment15.target=java.lang.String\ toString()
comment15.text=\r\n\ \ \ \ erzeugt\ einen\ String,\ der\ alle,\ fuer\ den\ Klassenbenutzer\r\n\ \ \ \ wichtigen,\ Lager-Merkmale\ enthaelt\r\n\ \ \ \r\n\ \ \ \ @return\ die\ String-Repraesentation\ des\ Lagers\r\n
comment16.params=c
comment16.target=Artikel[]\ getSorted(java.util.function.BiPredicate)
comment16.text=\r\n\ Gibt\ die\ Artikel\ im\ Lager\ als\ sortiertes\ Array\ zur\u00FCck.\ \r\n\ Das\ Sortierkriterium\ wird\ als\ Parameter\ an\ die\ Methode\ \u00FCbergeben.\r\n\ \r\n\ @param\ c\ -\ ein\ Pr\u00E4dikat-Objekt,\ welches\ das\ Sortierkriterium\ implementiert\ \ \r\n\ @return\ ein\ sortiertes\ Array\ der\ Artikel\ im\ Lager\ \r\n
comment17.params=c\ a
comment17.target=void\ sort(java.util.function.BiPredicate,\ Artikel[])
comment17.text=\r\n\ Hilfsmethode\ zum\ Sortieren\ eines\ \u00FCbergebenen\ Arrays\r\n\ \r\n\ @param\ c\ -\ ein\ Pr\u00E4dikat-Objekt,\ welches\ das\ Sortierkriterium\ implementiert\r\n\ @param\ a\ -\ das\ zu\ sortierende\ Array\r\n
comment18.params=c
comment18.target=java.util.List\ getSorted(java.util.Comparator)
comment18.text=\r\n\ Alternative\ Implementierung\ der\ getSorted\ Methode,\ \r\n\ unter\ Nutzung\ der\ sort\ Methode\ des\ List-Interfaces.\r\n\ @param\ c\ -\ ein\ Comparator-Objekt\ zum\ Vergleich\ zweier\ Artikel\r\n\ @return\ eine\ sortierte\ Liste\ der\ Artikel\ im\ Lager\r\n
comment19.params=i\ j\ a
comment19.target=void\ swap(int,\ int,\ Artikel[])
comment19.text=\r\n\ Hilfsmethode\ zum\ Sortieren\ eines\ Arrays.\ Die\ Methode\ vertauscht\ \r\n\ die\ beiden\ Elemente\ mit\ den\ Indizes\ i\ und\ j\ eines\ \u00FCbergebenen\ Arrays.\ \r\n\ \r\n\ @param\ i\ -\ Index\ des\ ersten\ Elements\r\n\ @param\ j\ -\ Index\ des\ zweiten\ Elements\r\n\ @param\ a\ -\ Array\ f\u00FCr\ die\ Vertauschung\ \r\n
comment2.params=dimension
comment2.target=Lager(int)
comment2.text=\r\n\ \ \ \ Der\ Konstruktor\ zur\ Initialisierung\ \r\n\ \ \ \ eines\ Lagers\ mit\ einer\ maximalen\ Anzahl\ von\ Artikel-Lagerplaetzen\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ @param\ dimension\ \ \=\=\ Anzahl\ der\ maximal\ im\ Lager\ fuehrbaren\ Artikel\r\n
comment20.params=f
comment20.target=java.util.List\ filter(java.util.function.Predicate)
comment20.text=\r\n\ Filtert\ die\ Artikel\ im\ Lager\ nach\ einem\ an\ die\ Methode\ \u00FCbergebenen\ Filterkriterium.\ \r\n\ \r\n\ @param\ f\ -\ ein\ Pr\u00E4dikat-Objekt,\ welches\ das\ Filterkriterium\ implementiert\r\n\ @return\ eine\ Liste\ alle\ Artikel\ im\ Lager,\ die\ das\ Filterkriterium\ erf\u00FCllen.\ \r\n
comment21.params=c
comment21.target=void\ applyToArticles(java.util.function.Consumer)
comment21.text=\r\n\ wendet\ eine\ \u00FCbergebene\ Operation\ auf\ alle\ Artikel\ im\ Lager\ an\ \r\n\ \r\n\ @param\ c\ -\ ein\ Consumer\ der\ die\ auf\ die\ Artikel\ anzuwendende\ Operation\ implementiert\r\n
comment22.params=f\ c
comment22.target=void\ applyToSomeArticles(java.util.function.Predicate,\ java.util.function.Consumer)
comment22.text=\r\n\ wendet\ eine\ \u00FCbergebene\ Operation\ auf\ alle\ Artikel,\ welche\ ein\ Filterkriterium\ erf\u00FCllen\ an\r\n\ \r\n\ @param\ f\ -\ ein\ Pr\u00E4dikat-Objekt,\ welches\ das\ Filterkriterium\ implementiert\r\n\ @param\ c\ -\ ein\ Consumer\ der\ die\ auf\ die\ Artikel\ anzuwendende\ Operation\ implementiert\r\n
comment23.params=f\ c
comment23.target=Artikel[]\ getArticles(java.util.function.Predicate,\ java.util.function.BiPredicate)
comment23.text=\r\n\ liefert\ eine\ sortierte\ Liste\ der\ Artikel,\ die\ ein\ gegebenes\ Filterkriterium\ erf\u00FCllen\r\n\ \r\n\ @param\ f\ -\ ein\ Pr\u00E4dikat-Objekt,\ welches\ das\ Filterkriterium\ implementiert\r\n\ @param\ c\ -\ ein\ Pr\u00E4dikat-Objekt,\ welches\ das\ Sortierkriterium\ implementiert\r\n\ @return\ eine\ sortierte\ Liste\ der\ gefilterten\ Artikel\r\n
comment3.params=lagerOrt
comment3.target=Lager(java.lang.String)
comment3.text=\r\n\ \ \ \ Der\ Konstruktor\ zur\ Initialisierung\ \r\n\ \ \ \ eines\ Lagers\ mit\ einem\ Lagerort\ und\ Standard-Artikel--Lagerplaetzen\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ @param\ lagerOrt\ \=\=\ Ort\ an\ dem\ das\ Lager\ existiert\r\n
comment4.params=dimension\ lagerOrt
comment4.target=Lager(int,\ java.lang.String)
comment4.text=\r\n\ \ \ \ Der\ Konstruktor\ zur\ Initialisierung\ \r\n\ \ \ \ eines\ Lagers\ mit\ einer\ maximalen\ Anzahl\ von\ Artikel-Lagerplaetzen\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ @param\ dimension\ \ \=\=\ Anzahl\ der\ maximal\ im\ Lager\ fuehrbaren\ Artikel\r\n\ \ \ \ @param\ lagerOrt\ \=\=\ Ort\ an\ dem\ das\ Lager\ existiert\r\n
comment5.params=
comment5.target=java.lang.String\ getLagerOrt()
comment5.text=\r\n\ \ \ \ gibt\ Lager-Attribut\ \:\ lagerOrt\ zurueck\r\n\r\n\ \ \ \ @return\ \ \ \ lagerOrt\r\n
comment6.params=lagerOrt
comment6.target=void\ setLagerOrt(java.lang.String)
comment6.text=\r\n\ \ \ \ setzt\ Lager-Attribut\ \:\ \ lagerOrt\r\n\ \ \ \r\n\ \ \ \ @param\ lagerOrt\ \ \ \ \ neuer\ Lager-Ort\r\n
comment7.params=einArtikel
comment7.target=void\ anlegen(Artikel)
comment7.text=\r\n\ \ \ \ anlegen\ eines\ neuen\ Artikels\ und\ ins\ Lager\ einordnen\r\n\r\n\ \ \ \ @param\ einArtikel\ \ der\ anzulegende\ Artikel\r\n
comment8.params=
comment8.target=void\ erweitere_lager()
comment8.text=\r\n\ \ \ \ erweitert\ die\ Lagerkapazitaet\ um\r\n\ \ \ \ STANDARD_OFFSET\ Lagerplaetze\r\n\r\n
comment9.params=loeschArtikelNr
comment9.target=void\ entfernen(int)
comment9.text=\r\n\ \ \ \ entfernt\ den\ Artikel\ anhand\ seiner\ Artikel-Nummer\ aus\ dem\ Lager\r\n\ \ \ \r\n\ \ \ \ @param\ \ \ loeschArtikelNr\ Nummer\ des\ zu\ loeschenden\ Artikels\r\n\r\n
numComments=24
