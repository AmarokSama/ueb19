#BlueJ class context
comment0.target=LagerDialog
comment0.text=\r\n\ \ \ \ Die\ Klasse\:\ \ LagerDialog.java\r\n\ \ \ \ Realisiert\ eine\ allgemeine\ Test-Klasse\ fuer\r\n\ \ \ \ die\ Lager-Klasse\r\n\r\n\ @version\ 3.0\ Beta\ 13.01.2017\r\n\ @author\ \ Wolfgang\ Pauly\r\n\r\n
comment1.params=
comment1.target=LagerDialog()
comment1.text=\r\n\ Standard-Konstruktor\ fuer\ LagerDialog\r\n
comment10.params=
comment10.target=void\ test17_3_viii()
comment10.text=\r\n\ testet\ die\ neuen\ Lager\ Funktionen\ aus\ Aufgabe\ 17.3\r\n\ \r\n
comment11.params=
comment11.target=void\ test17_3_ix()
comment11.text=\r\n\ testet\ die\ neuen\ Lager\ Funktionen\ aus\ Aufgabe\ 17.3\r\n\ \r\n
comment12.params=
comment12.target=int\ auswahlFunktion()
comment12.text=\r\n\ \ Erfragt\ vom\ Benutzer\ die\ als\ naechstes\ auszufuehrende\ Aktion\r\n\r\n\ \ @return\ das\ Aktionskennzeichen\r\n
comment13.params=bedingung
comment13.target=void\ existiertFirmenLager(boolean)
comment13.text=\r\n\ \ Ueberprueft\ ob\ schon\ ein\ Firmenlager\ vorhanden\ ist,\r\n\ \r\n\ \ @param\ bedingung\ \=\=\ false\ --\ bei\ Vorhandensein\ des\ Lagers\ wird\ eine\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Runtime-Exception\ geworfen\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \=\=\ true\ \ --\ bei\ NICHT-Vorhandensein\ des\ Lagers\ wird\ eine\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Runtime-Exception\ geworfen\r\n
comment14.params=
comment14.target=void\ erzeugeLagerPosition()
comment14.text=\r\n\ \ Erfragt\ vom\ Benutzer\ die\ Daten\ fuer\ einen\ Artikel\r\n\ \ und\ veranlasst\ das\ Lager\ den\ erzeugen\ Artikel\r\n\ \ aufzunehmen\r\n\ \r\n
comment15.params=
comment15.target=int\ erfrageZugang()
comment15.text=\r\n\ \ Erfragt\ vom\ Benutzer\ den\ Lagerzugang\ fuer\ einen\ Artikel\r\n\ \ \r\n\ \ @return\ die\ Zugangs-Zahl\r\n
comment16.params=
comment16.target=int\ erfrageAbgang()
comment16.text=\r\n\ \ Erfragt\ vom\ Benutzer\ den\ Lagerabgang\ fuer\ einen\ Artikel\r\n\ \ \r\n\ \ @return\ die\ Abgangs-Zahl\r\n
comment17.params=einLager\ dateiName
comment17.target=void\ write(Lager,\ java.lang.String)
comment17.text=\r\n\ \ \ \ write\ -->\ Speichert\ die\ Lager\ in\ Datei\r\n\r\n\ \ \ \ @param\ dateiName\ \ \ \ der\ Dateiname\r\n\r\n
comment18.params=dateiName
comment18.target=Lager\ read(java.lang.String)
comment18.text=\r\n\ \ \ \ read\ ->\ Liest\ \ ein\ Lager\ aus\ Datei\ ein\r\n\r\n\ \ \ \ @param\ \ \ \ der\ Dateiname\r\n\r\n
comment19.params=
comment19.target=void\ erstelleTestLager()
comment19.text=\r\n\ erstellt\ ein\ neues,\ zuf\u00E4llig\ bef\u00FClltes\ Lager\r\n
comment2.params=
comment2.target=void\ run()
comment2.text=\r\n\ run\ -->\ laesst\ die\ benutzergesteuerte\ Bedienung\ \r\n\ \ \ \ \ \ \ \ \ des\ Lager-Test's\ ablaufen\r\n\ \r\n
comment20.params=args
comment20.target=void\ main(java.lang.String[])
comment20.text=\r\n\ \ main\r\n
comment3.params=
comment3.target=void\ test17_3_i()
comment3.text=\r\n\ testet\ die\ neuen\ Lager\ Funktionen\ aus\ Aufgabe\ 17.3\r\n\ \r\n
comment4.params=
comment4.target=void\ test17_3_ii()
comment4.text=\r\n\ testet\ die\ neuen\ Lager\ Funktionen\ aus\ Aufgabe\ 17.3\r\n\ \r\n
comment5.params=
comment5.target=void\ test17_3_iii()
comment5.text=\r\n\ testet\ die\ neuen\ Lager\ Funktionen\ aus\ Aufgabe\ 17.3\r\n\ \r\n
comment6.params=
comment6.target=void\ test17_3_iv()
comment6.text=\r\n\ testet\ die\ neuen\ Lager\ Funktionen\ aus\ Aufgabe\ 17.3\r\n\ \r\n
comment7.params=
comment7.target=void\ test17_3_v()
comment7.text=\r\n\ testet\ die\ neuen\ Lager\ Funktionen\ aus\ Aufgabe\ 17.3\r\n\ \r\n
comment8.params=
comment8.target=void\ test17_3_vi()
comment8.text=\r\n\ testet\ die\ neuen\ Lager\ Funktionen\ aus\ Aufgabe\ 17.3\r\n\ \r\n
comment9.params=
comment9.target=void\ test17_3_vii()
comment9.text=\r\n\ testet\ die\ neuen\ Lager\ Funktionen\ aus\ Aufgabe\ 17.3\r\n\ \r\n
numComments=21
